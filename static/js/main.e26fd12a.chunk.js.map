{"version":3,"sources":["components/Navbar/NavbarElements.js","components/Navbar/index.js","pages/home.js","pages/about.js","pages/services.js","pages/contact.js","pages/signup.js","pages/page6.js","App.js","serviceWorker.js","index.js"],"names":["Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","Navbar","to","activeStyle","Home","className","type","id","name","value","rows","cols","About","Services","Contact","SignUp","Page6","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e26fd12a.chunk.js","sourcesContent":["import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n  background: #000;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.5rem calc((100vw - 1000px) / 2);\r\n  z-index: 10;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-start; */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  height: 100%;\r\n  cursor: pointer;\r\n\r\n  &.active {\r\n    color: #15cdfc;\r\n  }\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n\r\n  /* Second Nav */\r\n  /* margin-right: 24px; */\r\n\r\n  /* Third Nav */\r\n  /* width: 100vw;\r\n  white-space: nowrap; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-end;\r\n  width: 100vw; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 4px;\r\n  background: #256ce1;\r\n  padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n\r\n  /* Second Nav */\r\n  margin-left: 24px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #010606;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink\r\n} from './NavbarElements';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <NavLink to='/'>\r\n        </NavLink>\r\n        <Bars />\r\n        <NavMenu>\r\n          <NavLink to='/home' activeStyle>\r\n            บทที่ 1\r\n          </NavLink>\r\n          <NavLink to='/about' activeStyle>\r\n            บทที่ 2\r\n          </NavLink>\r\n          <NavLink to='/services' activeStyle>\r\n            บทที่ 3\r\n          </NavLink>\r\n          <NavLink to='/contact-us' activeStyle>\r\n            บทที่ 4\r\n          </NavLink>\r\n          <NavLink to='/sign-up' activeStyle>\r\n            บทที่ 5\r\n          </NavLink>\r\n          <NavLink to='/page6' activeStyle>\r\n            บทที่ 6\r\n          </NavLink>\r\n          {/* Second Nav */}\r\n          {/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\r\n        </NavMenu>\r\n        <NavBtn>\r\n        </NavBtn>\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className='home'>\r\n      <h1>Input</h1>\r\n      <input type='text' id = \"a\" name = 'input'></input><br></br>\r\n      <input type=\"submit\" value=\"Submit\"></input><br></br>\r\n      <h1>Show</h1>\r\n      <textarea id=\"a\" name=\"textarea\" rows=\"5\" cols=\"120\"></textarea>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n  <div className='home'>\r\n    <h1>Input</h1>\r\n    <input type='text' id = \"a\" name = 'input'></input><br></br>\r\n    <input type=\"submit\" value=\"Submit\"></input><br></br>\r\n    <h1>Show</h1>\r\n    <textarea id=\"a\" name=\"textarea\" rows=\"5\" cols=\"120\"></textarea>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst Services = () => {\r\n  return (\r\n    <div className='home'>\r\n    <h1>Input</h1>\r\n    <input type='text' id = \"a\" name = 'input'></input><br></br>\r\n    <input type=\"submit\" value=\"Submit\"></input><br></br>\r\n    <h1>Show</h1>\r\n    <textarea id=\"a\" name=\"textarea\" rows=\"5\" cols=\"120\"></textarea>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","import React from 'react';\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div className='home'>\r\n    <h1>Input</h1>\r\n    <input type='text' id = \"a\" name = 'input'></input><br></br>\r\n    <input type=\"submit\" value=\"Submit\"></input><br></br>\r\n    <h1>Show</h1>\r\n    <textarea id=\"a\" name=\"textarea\" rows=\"5\" cols=\"120\"></textarea>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\n\r\nconst SignUp = () => {\r\n  return (\r\n    <div className='home'>\r\n    <h1>Input</h1>\r\n    <input type='text' id = \"a\" name = 'input'></input><br></br>\r\n    <input type=\"submit\" value=\"Submit\"></input><br></br>\r\n    <h1>Show</h1>\r\n    <textarea id=\"a\" name=\"textarea\" rows=\"5\" cols=\"120\"></textarea>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\n\r\nconst Page6 = () => {\r\n  return (\r\n    <div className='home'>\r\n    <h1>Input</h1>\r\n    <input type='text' id = \"a\" name = 'input'></input><br></br>\r\n    <input type=\"submit\" value=\"Submit\"></input><br></br>\r\n    <h1>Show</h1>\r\n    <textarea id=\"a\" name=\"textarea\" rows=\"5\" cols=\"120\"></textarea>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Page6;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/home';\nimport About from './pages/about';\nimport Services from './pages/services';\nimport Contact from './pages/contact';\nimport SignUp from './pages/signup';\nimport Page6 from './pages/page6';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path='/home' exact component={Home} />\n        <Route path='/about' component={About} />\n        <Route path='/services' component={Services} />\n        <Route path='/contact-us' component={Contact} />\n        <Route path='/sign-up' component={SignUp} />\n        <Route path='/page6' component={Page6} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}